# Планеты вращаются вокруг звезд по эллиптическим орбитам.
# Назовем самой далекой планетой ту, орбита которой имеет
# самую большую площадь. Напишите функцию
# find_farthest_orbit(list_of_orbits), которая среди списка орбит
# планет найдет ту, по которой вращается самая далекая
# планета. Круговые орбиты не учитывайте: вы знаете, что у
# вашей звезды таких планет нет, зато искусственные спутники
# были были запущены на круговые орбиты. Результатом
# функции должен быть кортеж, содержащий длины полуосей
# эллипса орбиты самой далекой планеты. Каждая орбита
# представляет из себя кортеж из пары чисел - полуосей ее
# эллипса. Площадь эллипса вычисляется по формуле S = pi*a*b,
# где a и b - длины полуосей эллипса. При решении задачи
# используйте списочные выражения. Подсказка: проще всего
# будет найти эллипс в два шага: сначала вычислить самую
# большую площадь эллипса, а затем найти и сам эллипс,
# имеющий такую площадь. Гарантируется, что самая далекая
# планета ровно одна

orbits = [(1, 3), (2.5, 10), (7, 2), (6, 6), (4, 3)]

squares = [3.14*v[0]*v[1] for v in orbits]
print(squares)

def get_max_index(list):
    max=0
    for i in range(len(list)):
        if list[i]>max:
            max=list[i]
            max_index=i
    return max_index




print(*find_farthest_orbit(orbits))

# def square_orbit (tuple):
#     s=3.14
#     for i in tuple:
#         s=s*i
#     return s

# res=list(map(square_orbit,orbits))
# print(res)



#     l=[]
#     s=p*a*b
    
#         s=p*a*b
#         squares.append(s)


# res=list(map(square_orbit,orbits))
# print(res)

# #l=[i==pi*a*b for i ]
# def find_farthest_orbit(list):
#     s=pi*a*b
#     for i in list:


#print(*find_farthest_orbit(orbits))